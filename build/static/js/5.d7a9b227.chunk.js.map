{"version":3,"sources":["icons/sprite.svg","services/ApiService.js","components/SearchForm/SearchFormStyled.js","components/SearchForm/SearchForm.js","components/Section.js","components/CurrencyList/CurrencyListStyled.js","components/CurrencyList/CurrencyList.js","pages/AllCurrenciesPage.js"],"names":["fetchCurrencies","a","axios","get","result","console","log","fetchRates","response","data","rates","SearchFormStyled","styled","form","SearchForm","state","query","handleChange","e","reset","setState","currentTarget","value","handleSubmit","preventDefault","onSubmit","this","props","title","className","type","name","placeholder","onChange","width","height","href","sprite","Component","Section","children","CurrencyListStyled","ul","handleClick","selectedCurrency","setAttribute","classList","toggle","withRouter","currencies","map","currency","onClick","AllCurrenciesPage","codes","then","symbolsArr","Object","values","symbols","currenciesCodes","code","currenciesDescription","description"],"mappings":"uGAAe,QAA0B,oC,kJCO5BA,EAAe,uCAAG,4BAAAC,EAAA,+EAENC,IAAMC,IAJR,yCAEQ,cAErBC,EAFqB,yBAIpBA,GAJoB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,qDAUfC,EAAU,uCAAG,4BAAAN,EAAA,+EAECC,IAAMC,IAff,wCAaQ,cAEhBK,EAFgB,yBASfA,EAASC,KAAKC,OATC,gCAWtBL,QAAQC,IAAR,MAXsB,yDAAH,sD,oFCfVK,E,MAAmBC,EAAOC,KAAV,wW,eCOvBC,E,4MACJC,MAAQ,CACNC,MAAO,I,EAGTC,aAAe,SAACC,GACd,EAAKC,QACL,EAAKC,SAAS,CAAEJ,MAAOE,EAAEG,cAAcC,S,EAGzCC,aAAe,SAACL,GACdA,EAAEM,iBACFnB,QAAQC,IAAI,EAAKS,MAAMC,OASvB,EAAKG,S,EAGPA,MAAQ,WACN,EAAKC,SAAS,CAAEJ,MAAO,M,4CAGzB,WACE,OACE,eAACL,EAAD,CAAkBc,SAAUC,KAAKH,aAAjC,UACE,6BAAKG,KAAKC,MAAMC,QAEhB,wBAAOC,UAAU,kBAAjB,UACE,uBACEA,UAAU,cACVC,KAAK,OACLC,KAAK,OACLC,YAAY,iBACZC,SAAUP,KAAKT,aACfK,MAAOI,KAAKX,MAAMC,QAIpB,qBAAKa,UAAU,oBAAoBK,MAAM,OAAOC,OAAO,OAAvD,SACE,qBACEN,UAAU,iBACVO,KAAMC,IAAS,6B,GA/CJC,aAwDVxB,O,mIC3DAyB,EAJC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OAAO,yBAASX,UAAU,UAAnB,SAA8BW,K,eCD1BC,E,MAAqB7B,EAAO8B,GAAV,gaCyBzBC,EAAc,SAACzB,GACnB,IAAM0B,EAAmB1B,EAAEG,cAC3BhB,QAAQC,IAAIsC,GACZA,EAAiBC,aAAa,WAAY,QAC1CxC,QAAQC,IAAIsC,GACZA,EAAiBE,UAAUC,OAAO,aAsCrBC,eA9BM,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAGtB,OACE,cAAC,EAAD,UACE,cAACR,EAAD,UACGQ,EAAWC,KAAI,SAACC,GAAD,OACd,qBAEEtB,UAAU,qBACVuB,QAAST,EAHX,UAKE,wBAAQd,UAAU,iBAAlB,SAAoCsB,IACpC,qBAAKjB,MAAM,OAAOC,OAAO,OAAzB,SACE,qBACEN,UAAU,iBACVO,KAAMC,IAAS,yBARdc,a,QC1CXE,E,4MACJtC,MAAQ,CACNkC,WAAY,GACZK,MAAO,I,8FAGT,iCAAArD,EAAA,sDACED,cAAkBuD,MAAK,SAACnD,GACtB,IAAMoD,EAAaC,OAAOC,OAAOtD,EAAOK,KAAKkD,SACvCC,EAAkBJ,EAAWN,KAAI,SAACjD,GAAD,OAAOA,EAAE4D,QAC1CC,EAAwBN,EAAWN,KAAI,SAACjD,GAAD,OAAOA,EAAE8D,eAEtD,EAAK3C,SAAS,CACZ6B,WAAYa,EACZR,MAAOM,OARb,2C,0EAkBA,WACE,OACE,qCACE,cAAC9C,EAAA,EAAD,CAAYc,MAAM,mBAElB,cAAC,EAAD,CAAcqB,WAAYvB,KAAKX,MAAMkC,oB,GA7BbX,aAmCjBe","file":"static/js/5.d7a9b227.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/sprite.fdcb769e.svg\";","import axios from \"axios\";\r\n\r\n// const API_KEY = process.env.REACT_APP_API_KEY;\r\n// const API_URL = process.env.REACT_APP_BASE_URL;\r\nconst rates_URL = \"https://api.exchangerate.host/latest\";\r\nconst currencies_URL = \"https://api.exchangerate.host/symbols\";\r\n\r\nexport const fetchCurrencies = async () => {\r\n  try {\r\n    const result = await axios.get(currencies_URL);\r\n\r\n    return result;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n\r\nexport const fetchRates = async () => {\r\n  try {\r\n    const response = await axios.get(rates_URL);\r\n    // console.log(response);\r\n    // console.log(response.data.base);\r\n    // console.log(response.data.date);\r\n    // console.log(response.data.rates);\r\n    //для обмена валют\r\n\r\n    return response.data.rates;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nexport const SearchFormStyled = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  margin-left: 30vw;\r\n  margin-bottom: 20px;\r\n\r\n  .SearchField {\r\n    width: 300px;\r\n    height: 30px;\r\n    border-radius: 4px;\r\n    padding-left: 20px;\r\n    margin-left: 16px;\r\n  }\r\n  .Currency__Icon {\r\n    fill: grey;\r\n  }\r\n  .Currency__IconBox {\r\n    transform: translateX(-150%);\r\n  }\r\n`;\r\n","import React, { Component } from \"react\";\r\nimport { SearchFormStyled } from \"./SearchFormStyled\";\r\nimport sprite from \"../../icons/sprite.svg\";\r\n// import { connect } from \"react-redux\";\r\n// import { onSearchFilter } from \"../redux/currency-actions\";\r\n// import { getFilter } from \"../redux/currency-selectors\";\r\n\r\n// const SearchForm = ({ onSearchHandler, filter }) => {\r\n\r\nclass SearchForm extends Component {\r\n  state = {\r\n    query: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.reset();\r\n    this.setState({ query: e.currentTarget.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(this.state.query);\r\n    // this.props.onSubmit(this.state.query);\r\n\r\n    //  this.props.contacts.find(\r\n    //    (contact) => contact.name.toLowerCase() === this.state.name.toLowerCase()\r\n    //  )\r\n    //    ? alert(`Contact with the name ${this.state.name} already exists.`)\r\n    //    : this.props.addNewContact({ ...this.state });\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ query: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <SearchFormStyled onSubmit={this.handleSubmit}>\r\n        <h1>{this.props.title}</h1>\r\n\r\n        <label className=\"searchFormLabel\">\r\n          <input\r\n            className=\"SearchField\"\r\n            type=\"text\"\r\n            name=\"name\"\r\n            placeholder=\"search by name\"\r\n            onChange={this.handleChange}\r\n            value={this.state.query}\r\n            // value={filter}\r\n            // onChange={onSearchHandler}\r\n          />\r\n          <svg className=\"Currency__IconBox\" width=\"15px\" height=\"15px\">\r\n            <use\r\n              className=\"Currency__Icon\"\r\n              href={sprite + \"#icon-search\"}\r\n            ></use>\r\n          </svg>\r\n        </label>\r\n      </SearchFormStyled>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchForm;\r\n\r\n// const mapStateToProps = (state) => ({\r\n//   filter: getFilter(state),\r\n// });\r\n\r\n// const mapDispatchToProps = (dispatch) => ({\r\n//   onSearchHandler: (e) => dispatch(onSearchFilter(e.target.value)),\r\n// });\r\n\r\n// export default connect(mapStateToProps, mapDispatchToProps)(SearchForm);\r\n","import React from \"react\";\r\n\r\nconst Section = ({ children }) => {\r\n  return <section className=\"section\">{children}</section>;\r\n};\r\n\r\nexport default Section;\r\n","import styled from \"styled-components\";\r\n\r\nexport const CurrencyListStyled = styled.ul`\r\n  align-items: center;\r\n  margin-left: 30vw;\r\n  height: 80vh;\r\n  overflow-y: scroll;\r\n\r\n  .Currency__ListItem {\r\n    display: flex;\r\n    width: 500px;\r\n    height: 40px;\r\n    border: 1px solid white;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    padding-left: 20px;\r\n    padding-right: 20px;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .Currency__Icon {\r\n    fill: white;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport Section from \"../Section\";\r\nimport sprite from \"../../icons/sprite.svg\";\r\nimport { CurrencyListStyled } from \"./CurrencyListStyled\";\r\n\r\n// const getIcon = (isActive) => {\r\n//   if (isActive === \"true\") {\r\n//     return \"#icon-star-full\";\r\n//   }\r\n//   if (isActive === \"false\") {\r\n//     return \"#icon-star-empty\";\r\n//   }\r\n// };\r\n\r\n//добавить toggler для isActive\r\n\r\n// document\r\n//   .getElementById(\"#CurrencyList\")\r\n//   .addEventListener(\"click\", function (e) {\r\n//     console.log(e.currentTarget);\r\n//     console.log(e);\r\n//     // if (e.target && e.currentTarget == \"LI\") {\r\n//     //   console.log(e.target.id + \" was clicked\");\r\n//     // }\r\n//   });\r\n\r\nconst handleClick = (e) => {\r\n  const selectedCurrency = e.currentTarget;\r\n  console.log(selectedCurrency);\r\n  selectedCurrency.setAttribute(\"isActive\", \"true\");\r\n  console.log(selectedCurrency);\r\n  selectedCurrency.classList.toggle(\"isActive\");\r\n\r\n  //если кликаем на него, он сохраняется в localStorage\r\n  //звезда меняется - toggler\r\n  //попадает в favourites\r\n  //попадает на вторую страницу\r\n};\r\n\r\nconst CurrencyList = ({ currencies }) => {\r\n  // const [state, setstate] = useState(initialState);\r\n\r\n  return (\r\n    <Section>\r\n      <CurrencyListStyled>\r\n        {currencies.map((currency) => (\r\n          <li\r\n            key={currency}\r\n            className=\"Currency__ListItem\"\r\n            onClick={handleClick}\r\n          >\r\n            <option className=\"Currency__Name\">{currency}</option>\r\n            <svg width=\"15px\" height=\"15px\">\r\n              <use\r\n                className=\"Currency__Icon\"\r\n                href={sprite + \"#icon-star-empty\"}\r\n              ></use>\r\n              {/* <use\r\n                  className=\"Currency__Icon\"\r\n                  href={sprite + getIcon(isActive)}\r\n                ></use> */}\r\n            </svg>\r\n          </li>\r\n        ))}\r\n      </CurrencyListStyled>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default withRouter(CurrencyList);\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { fetchCurrencies } from \"../services/ApiService\";\r\nimport CurrencyList from \"../components/CurrencyList/CurrencyList\";\r\nimport SearchForm from \"../components/SearchForm/SearchForm\";\r\n\r\nclass AllCurrenciesPage extends Component {\r\n  state = {\r\n    currencies: [],\r\n    codes: [],\r\n  };\r\n\r\n  async componentDidMount() {\r\n    fetchCurrencies().then((result) => {\r\n      const symbolsArr = Object.values(result.data.symbols);\r\n      const currenciesCodes = symbolsArr.map((a) => a.code);\r\n      const currenciesDescription = symbolsArr.map((a) => a.description);\r\n\r\n      this.setState({\r\n        currencies: currenciesDescription,\r\n        codes: currenciesCodes,\r\n      });\r\n    });\r\n\r\n    // fetchRates().then((response) => {\r\n    //   return response;\r\n    // });\r\n  }\r\n  // rates для exchange использовать\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <SearchForm title=\"All currencies\" />\r\n\r\n        <CurrencyList currencies={this.state.currencies} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AllCurrenciesPage;\r\n"],"sourceRoot":""}