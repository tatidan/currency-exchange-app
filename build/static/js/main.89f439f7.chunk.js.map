{"version":3,"sources":["routes/mainRoutes.js","components/navigation/NavigationStyled.js","components/navigation/Navigation.js","components/ThemeSwitcher/ThemeSwitcher.js","components/header/AppBar.js","components/header/HeaderContainer.js","components/header/Header.js","components/main/MainContainer.js","themes/index.js","themes/light.js","themes/dark.js","App.js","hooks/usePersistedTheme.js","index.js"],"names":["mainRoutes","name","path","exact","restricted","redirectTo","component","lazy","NavigationStyled","styled","nav","Navigation","className","to","activeClassName","ThemeSwitcher","useContext","ThemeContext","theme","changeTheme","onChange","checked","title","AppBar","HeaderContainer","header","props","colors","background","text","Header","MainContainer","main","secondary","themes","light","primary","dark","createContext","App","useState","storageTheme","JSON","parse","localStorage","getItem","getTheme","setTheme","useEffect","setItem","stringify","console","log","usePersistedTheme","Provider","value","fallback","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89f439f7.chunk.js","sourcesContent":["import { lazy } from \"react\";\r\n\r\nexport const mainRoutes = [\r\n  {\r\n    name: \"allcurrencies\",\r\n    path: \"/\",\r\n    exact: true,\r\n    restricted: false,\r\n    redirectTo: \"/\",\r\n    component: lazy(() =>\r\n      import(\r\n        \"../pages/AllCurrenciesPage\" /* webpackChuckName: \"AllCurrenciesPage\"*/\r\n      )\r\n    ),\r\n  },\r\n  {\r\n    name: \"mycurrencies\",\r\n    path: \"/mycurrencies\",\r\n    exact: true,\r\n    restricted: false,\r\n    redirectTo: \"/mycurrencies\",\r\n    component: lazy(() =>\r\n      import(\r\n        \"../pages/MyCurrenciesPage\" /* webpackChuckName: \"MyCurrenciesPage\"*/\r\n      )\r\n    ),\r\n  },\r\n  {\r\n    name: \"exchange\",\r\n    path: \"/exchange\",\r\n    exact: true,\r\n    restricted: false,\r\n    redirectTo: \"/exchange\",\r\n    component: lazy(() =>\r\n      import(\"../pages/ExchangePage\" /* webpackChuckName: \"ExchangePage\"*/)\r\n    ),\r\n  },\r\n];\r\n","import styled from \"styled-components\";\r\n\r\nexport const NavigationStyled = styled.nav`\r\n  .NavList {\r\n    display: flex;\r\n  }\r\n  .NavListItem:not(:last-child) {\r\n    margin-right: 25px;\r\n  }\r\n  .NavLink {\r\n    color: #f5eeee;\r\n    &--active {\r\n      color: green;\r\n    }\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { NavigationStyled } from \"./NavigationStyled\";\r\n\r\nconst Navigation = () => {\r\n  return (\r\n    <NavigationStyled>\r\n      <ul className=\"NavList\">\r\n        <li className=\"NavListItem\">\r\n          <NavLink\r\n            exact\r\n            to=\"/\"\r\n            className=\"NavLink\"\r\n            activeClassName=\"NavLink--active\"\r\n          >\r\n            All currencies\r\n          </NavLink>\r\n        </li>\r\n\r\n        <li className=\"NavListItem\">\r\n          <NavLink\r\n            to=\"/mycurrencies\"\r\n            className=\"NavLink\"\r\n            activeClassName=\"NavLink--active\"\r\n          >\r\n            My currencies\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"NavListItem\">\r\n          <NavLink\r\n            to=\"/exchange\"\r\n            className=\"NavLink\"\r\n            activeClassName=\"NavLink--active\"\r\n          >\r\n            Exchange\r\n          </NavLink>\r\n        </li>\r\n      </ul>\r\n    </NavigationStyled>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n\r\n// exchange page не должен быть в навигации\r\n// открывается по клику на валюту в CurrencyList\r\n","import React, { useContext } from \"react\";\r\nimport Switch from \"react-switch\";\r\nimport { ThemeContext } from \"../../App\";\r\nimport \"./ThemeSwitcher.css\";\r\n\r\nconst ThemeSwitcher = () => {\r\n  const { theme, changeTheme } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <>\r\n      <label className=\"ThemeSwitcher\">\r\n        <span className=\"ThemeSwitcher--day\">Day</span>\r\n        <Switch\r\n          onChange={changeTheme}\r\n          checked={theme.title === \"dark\" ? true : false}\r\n        />\r\n        <span className=\"ThemeSwitcher--night\">Night</span>\r\n      </label>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ThemeSwitcher;\r\n","import React from \"react\";\r\nimport Navigation from \"../navigation/Navigation\";\r\nimport ThemeSwitcher from \"../ThemeSwitcher/ThemeSwitcher\";\r\n\r\nconst AppBar = () => {\r\n  return (\r\n    <>\r\n      <Navigation />\r\n      <ThemeSwitcher />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AppBar;\r\n","import styled from \"styled-components\";\r\n\r\nexport const HeaderContainer = styled.header`\r\n  height: 60px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  padding: 0 30px;\r\n  background-color: ${(props) => props.colors.background};\r\n  color: ${(props) => props.colors.text};\r\n`;\r\n","import React, { useContext } from \"react\";\r\nimport AppBar from \"./AppBar\";\r\nimport { ThemeContext } from \"../../App\";\r\nimport { HeaderContainer } from \"./HeaderContainer\";\r\n\r\nconst Header = () => {\r\n  const { theme } = useContext(ThemeContext);\r\n\r\n  return (\r\n    <>\r\n      <HeaderContainer colors={theme.colors}>\r\n        <AppBar />\r\n      </HeaderContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const MainContainer = styled.main`\r\n  background-color: ${(props) => props.colors.secondary};\r\n  color: ${(props) => props.colors.text};\r\n  padding-left: 30px;\r\n  padding-right: 30px;\r\n  margin: 0 auto;\r\n`;\r\n","import light from \"./light\";\r\nimport dark from \"./dark\";\r\n\r\nconst themes = {\r\n  light,\r\n  dark,\r\n};\r\n\r\nexport default themes;\r\n","const light = {\r\n  title: \"light\",\r\n\r\n  colors: {\r\n    primary: \"#ffffff\",\r\n    secondary: \"#dbd7d8\",\r\n    background: \"#424242\",\r\n    text: \"#858585\",\r\n  },\r\n};\r\n\r\nexport default light;\r\n","const dark = {\r\n  title: \"dark\",\r\n\r\n  colors: {\r\n    primary: \"#424242\",\r\n    secondary: \"#3d3d3d\",\r\n    background: \"#212121\",\r\n    text: \"#ffffff\",\r\n  },\r\n};\r\n\r\nexport default dark;\r\n","import React, { createContext } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { Suspense } from \"react\";\r\nimport { mainRoutes } from \"./routes/mainRoutes\";\r\nimport \"./index.css\";\r\nimport Header from \"./components/header/Header\";\r\nimport { MainContainer } from \"./components/main/MainContainer\";\r\nimport { usePersistedTheme } from \"./hooks/usePersistedTheme\";\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst App = () => {\r\n  const [theme, changeTheme] = usePersistedTheme();\r\n\r\n  return (\r\n    <>\r\n      <ThemeContext.Provider value={{ theme, changeTheme }}>\r\n        <Header colors={theme.colors} />\r\n        <MainContainer colors={theme.colors}>\r\n          <Suspense fallback={<div>Loading...</div>}>\r\n            <Switch>\r\n              {mainRoutes.map(({ path, exact, component }) => (\r\n                <Route\r\n                  path={path}\r\n                  component={component}\r\n                  exact={exact}\r\n                  key={path}\r\n                />\r\n              ))}\r\n            </Switch>\r\n          </Suspense>\r\n        </MainContainer>\r\n      </ThemeContext.Provider>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { useState, useEffect } from \"react\";\r\nimport themes from \"../themes\";\r\n\r\nconst usePersistedTheme = () => {\r\n  const getTheme = () => {\r\n    const storageTheme = JSON.parse(localStorage.getItem(\"theme\"));\r\n    return themes[storageTheme] || themes.dark;\r\n  };\r\n\r\n  const [theme, setTheme] = useState(getTheme());\r\n\r\n  const toggler = () => {\r\n    console.log(theme);\r\n    theme.title === \"dark\" ? setTheme(themes.light) : setTheme(themes.dark);\r\n  };\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"theme\", JSON.stringify(theme.title));\r\n  }, [theme]);\r\n\r\n  return [theme, toggler];\r\n};\r\n\r\nexport { usePersistedTheme };\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\n// import { Provider } from \"react-redux\";\r\n// import store from \"./redux/store.js\";\r\n// import { PersistGate } from \"redux-persist/es/integration/react\";\r\n// import { persistor } from \"./redux/store.js\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    {/* <Provider store={store}> */}\r\n    {/* <PersistGate loading={null} persistor={persistor}> */}\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n    {/* </PersistGate> */}\r\n    {/* </Provider> */}\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}